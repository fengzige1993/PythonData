{"name": "test_add[failed]", "status": "failed", "statusDetails": {"message": "AssertionError: assert -0.1 == 0.3\n  +-0.1\n  -0.3", "trace": "self = <com.python.pytest_test1.test_calc_new.TestCalc object at 0x0000028DF5157100>, get_calc = <com.python.test_code.calc.Calculator object at 0x0000028DF51F2160>\nget_datas = [0.1, -0.2, 0.3]\n\n    @allure.story(\"测试加法\")\n    @pytest.mark.add\n    def test_add(self, get_calc, get_datas):\n        \"\"\"\n        实例化计算器 ： self.calc = Calculator()\n        定义result变量接收add方法的返回值\n        调用相加方法\n        \"\"\"\n        with allure.step(\"计算两个数的相加和\"):\n            result = get_calc.add(get_datas[0],get_datas[1])\n            #如果result是浮点类型的参数，就是保留两位小数\n            if isinstance(result, float): # float\n                result = round(result, 2)\n            #得到相加结果之后写断言\n>           assert result == get_datas[2]\nE           assert -0.1 == 0.3\nE             +-0.1\nE             -0.3\n\ntest_calc_new.py:58: AssertionError"}, "description": "\n        实例化计算器 ： self.calc = Calculator()\n        定义result变量接收add方法的返回值\n        调用相加方法\n        ", "steps": [{"name": "计算两个数的相加和", "status": "failed", "statusDetails": {"message": "AssertionError: assert -0.1 == 0.3\n  +-0.1\n  -0.3\n", "trace": "  File \"E:\\PythonData\\com\\python\\pytest_test1\\test_calc_new.py\", line 58, in test_add\n    assert result == get_datas[2]\n"}, "start": 1614508093497, "stop": 1614508093497}], "parameters": [{"name": "get_datas", "value": "[0.1, -0.2, 0.3]"}], "start": 1614508093497, "stop": 1614508093497, "uuid": "5366ac42-0cd1-4ffa-a032-a12a7c446fbd", "historyId": "bd1b73714c73b5cf8cce7c0c5e2b50cd", "testCaseId": "07d7074b11baf99ef0f511221e36f260", "fullName": "test_calc_new.TestCalc#test_add", "labels": [{"name": "story", "value": "测试加法"}, {"name": "feature", "value": "测试计算器"}, {"name": "tag", "value": "add"}, {"name": "suite", "value": "test_calc_new"}, {"name": "subSuite", "value": "TestCalc"}, {"name": "host", "value": "DESKTOP-39CMD4K"}, {"name": "thread", "value": "33520-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_calc_new"}]}